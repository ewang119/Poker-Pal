{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bloon\\\\Documents\\\\wager-tracaker\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// add dependencies\nimport './App.css';\nimport io from 'socket.io-client';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [lobby, setLobby] = useState(\"\");\n  const [lobbyJoined, setLobbyJoined] = useState(false);\n  const socket = io.connect(\"http://localhost:3001\");\n  const joinLobby = () => {\n    if (name !== \"\" && lobby !== \"\") {\n      socket.emit(\"join_lobby\", lobby);\n      setLobbyJoined(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !lobbyJoined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notJoined\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Join a lobby:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Display Name\",\n        onChange: event => {\n          setName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Lobby Name\",\n        onChange: event => {\n          setLobby(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinLobby,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"You joined \", room]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QfoVCp6QHjEjwEG8gcPeeS02/iA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","jsxDEV","_jsxDEV","App","_s","name","setName","lobby","setLobby","lobbyJoined","setLobbyJoined","socket","connect","joinLobby","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","event","target","value","onClick","room","_c","$RefreshReg$"],"sources":["C:/Users/bloon/Documents/wager-tracaker/client/src/App.js"],"sourcesContent":["// add dependencies\nimport './App.css';\nimport io from 'socket.io-client';\nimport { useState } from 'react';\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [lobby, setLobby] = useState(\"\");\n  const [lobbyJoined, setLobbyJoined] = useState(false);\n\n  const socket = io.connect(\"http://localhost:3001\");\n\n  const joinLobby = () => {\n    if (name !== \"\" && lobby !== \"\") {\n      socket.emit(\"join_lobby\", lobby);\n      setLobbyJoined(true);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n\n      { !lobbyJoined ? (\n\n      <div className=\"notJoined\">\n\n        <h1>Join a lobby:</h1>\n        <input \n            type=\"text\"\n            placeholder=\"Display Name\" \n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n        />\n        <input \n            type=\"text\"\n            placeholder=\"Lobby Name\" \n            onChange={(event) => {\n              setLobby(event.target.value);\n            }}\n        />\n        <button onClick={joinLobby}>Join</button>\n\n      </div>\n      )\n      :\n      (\n        <h1>You joined {room}</h1>\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAO,WAAW;AAClB,OAAOA,EAAE,MAAM,kBAAkB;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMW,MAAM,GAAGZ,EAAE,CAACa,OAAO,CAAC,uBAAuB,CAAC;EAElD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIR,IAAI,KAAK,EAAE,IAAIE,KAAK,KAAK,EAAE,EAAE;MAC/BI,MAAM,CAACG,IAAI,CAAC,YAAY,EAAEP,KAAK,CAAC;MAChCG,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,oBACER,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,EAEhB,CAACP,WAAW,gBAEdP,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAExBd,OAAA;QAAAc,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACtBlB,OAAA;QACImB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,cAAc;QAC1BC,QAAQ,EAAGC,KAAK,IAAK;UACnBlB,OAAO,CAACkB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QAC7B;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ,eACFlB,OAAA;QACImB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBC,QAAQ,EAAGC,KAAK,IAAK;UACnBhB,QAAQ,CAACgB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QAC9B;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ,eACFlB,OAAA;QAAQyB,OAAO,EAAEd,SAAU;QAAAG,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAErC,gBAIJlB,OAAA;MAAAc,QAAA,GAAI,aAAW,EAACY,IAAI;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEG;AAEV;AAAChB,EAAA,CA/CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}