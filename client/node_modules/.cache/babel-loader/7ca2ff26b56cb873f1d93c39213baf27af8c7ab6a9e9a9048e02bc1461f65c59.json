{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bloon\\\\Documents\\\\wager-tracaker\\\\client\\\\src\\\\Lobby.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Lobby(_ref) {\n  _s();\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  // keep track of current bet\n  const [currentBet, setCurrentBet] = useState(0);\n  // keep track of list of bets sent\n  const [betList, setBetList] = useState([]);\n\n  // don't send empty messages, then transmit message data to other dude\n  const submitBet = async () => {\n    if (currentBet !== 0) {\n      const betData = {\n        bet: currentBet\n      };\n      await socket.emit(\"send_bet\", betData);\n      setBetList(list => [...list, betData]); // so we can see our own messages\n      setCurrentBet(0);\n    }\n  };\n  useEffect(() => {\n    socket.on(\"get_update\", e => {\n      setBetList(list => [...list, e]);\n    });\n    return () => socket.removeListener('get_update');\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lobby\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [lobby, \": Poker Lobby\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => function (event) {\n          setCurrentBet(1);\n          submitBet();\n        },\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"or enter a custom bet:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter your bet\",\n        onChange: event => {\n          setCurrentBet(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitBet,\n        children: \"Submit Bet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n_s(Lobby, \"hy6KvX+APIDxe6ZjPbB/3vWAgQo=\");\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Lobby","_ref","_s","socket","username","room","currentBet","setCurrentBet","betList","setBetList","submitBet","betData","bet","emit","list","on","e","removeListener","className","children","lobby","fileName","_jsxFileName","lineNumber","columnNumber","onClick","event","type","placeholder","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/Users/bloon/Documents/wager-tracaker/client/src/Lobby.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Lobby({socket, username, room}) {\r\n\t// keep track of current bet\r\n\tconst [currentBet, setCurrentBet] = useState(0);\r\n\t// keep track of list of bets sent\r\n\tconst [betList, setBetList] = useState([]);\r\n\t\r\n\t// don't send empty messages, then transmit message data to other dude\r\n\tconst submitBet = async () => {\r\n\t\tif (currentBet !== 0) {\r\n\t\t\tconst betData = {\r\n\t\t\t\tbet: currentBet\r\n\t\t\t};\r\n\r\n\t\t\tawait socket.emit(\"send_bet\", betData);\r\n\t\t\tsetBetList((list) => [...list, betData]); // so we can see our own messages\r\n\t\t\tsetCurrentBet(0);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect (() => {\r\n\t\tsocket.on(\"get_update\", (e) => {\r\n\t\t\tsetBetList((list) => [...list, e]);\r\n\t\t})\r\n\r\n        return () => socket.removeListener('get_update');\r\n\t}, [socket]);\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"lobby\">\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<p>{lobby}: Poker Lobby</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"footer\">\r\n                <button \r\n                    onClick={(event) => function(event) {\r\n                        setCurrentBet(1);\r\n                        submitBet();\r\n                    }}\r\n                >1</button>\r\n                <br/>\r\n                <h3>or enter a custom bet:</h3>\r\n                <br/>\r\n                <input \r\n                    type=\"number\"\r\n                    placeholder=\"Enter your bet\" \r\n                    onChange={(event) => {\r\n                        setCurrentBet(event.target.value);\r\n                    }}\r\n                />\r\n\t\t\t\t<button onClick={submitBet}>Submit Bet</button>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Lobby;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}